import _Reflect$construct from "@babel/runtime-corejs3/core-js-stable/reflect/construct";
import _classCallCheck from "@babel/runtime-corejs3/helpers/classCallCheck";
import _createClass from "@babel/runtime-corejs3/helpers/createClass";
import _get from "@babel/runtime-corejs3/helpers/get";
import _inherits from "@babel/runtime-corejs3/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime-corejs3/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime-corejs3/helpers/getPrototypeOf";
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }
import OAuth2 from './oauth2';
export var JwtOAuth2 = /*#__PURE__*/function (_OAuth) {
  _inherits(JwtOAuth2, _OAuth);
  var _super = _createSuper(JwtOAuth2);
  function JwtOAuth2(config) {
    _classCallCheck(this, JwtOAuth2);
    return _super.call(this, config);
  }
  _createClass(JwtOAuth2, [{
    key: "jwtAuthorize",
    value: function jwtAuthorize(innerToken) {
      return _get(_getPrototypeOf(JwtOAuth2.prototype), "_postParams", this).call(this, {
        grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',
        assertion: innerToken
      });
    }
  }]);
  return JwtOAuth2;
}(OAuth2);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPQXV0aDIiLCJKd3RPQXV0aDIiLCJfT0F1dGgiLCJfaW5oZXJpdHMiLCJfc3VwZXIiLCJfY3JlYXRlU3VwZXIiLCJjb25maWciLCJfY2xhc3NDYWxsQ2hlY2siLCJjYWxsIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJqd3RBdXRob3JpemUiLCJpbm5lclRva2VuIiwiX2dldCIsIl9nZXRQcm90b3R5cGVPZiIsInByb3RvdHlwZSIsImdyYW50X3R5cGUiLCJhc3NlcnRpb24iXSwic291cmNlcyI6WyIuLi9zcmMvand0T0F1dGgyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBPQXV0aDIsIHsgT0F1dGgyQ29uZmlnIH0gZnJvbSAnLi9vYXV0aDInO1xuXG5leHBvcnQgdHlwZSBKd3RPQXV0aDJDb25maWcgPSBPQXV0aDJDb25maWcgJiB7XG4gIHByaXZhdGVLZXk/OiBzdHJpbmc7XG4gIHByaXZhdGVLZXlGaWxlPzogc3RyaW5nO1xuICBhdXRoQ29kZT86IHN0cmluZztcbiAgcmVmcmVzaFRva2VuPzogc3RyaW5nO1xuICBsb2dpblVybD86IHN0cmluZztcbiAgdXNlcm5hbWU/OiBzdHJpbmc7XG59O1xuXG5leHBvcnQgY2xhc3MgSnd0T0F1dGgyIGV4dGVuZHMgT0F1dGgyIHtcbiAgY29uc3RydWN0b3IoY29uZmlnOiBPQXV0aDJDb25maWcpIHtcbiAgICBzdXBlcihjb25maWcpO1xuICB9XG5cbiAgcHVibGljIGp3dEF1dGhvcml6ZShpbm5lclRva2VuOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybiBzdXBlci5fcG9zdFBhcmFtcyh7XG4gICAgICBncmFudF90eXBlOiAndXJuOmlldGY6cGFyYW1zOm9hdXRoOmdyYW50LXR5cGU6and0LWJlYXJlcicsXG4gICAgICBhc3NlcnRpb246IGlubmVyVG9rZW4sXG4gICAgfSk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsT0FBT0EsTUFBTSxNQUF3QixVQUFVO0FBVy9DLFdBQWFDLFNBQVMsMEJBQUFDLE1BQUE7RUFBQUMsU0FBQSxDQUFBRixTQUFBLEVBQUFDLE1BQUE7RUFBQSxJQUFBRSxNQUFBLEdBQUFDLFlBQUEsQ0FBQUosU0FBQTtFQUNwQixTQUFBQSxVQUFZSyxNQUFvQixFQUFFO0lBQUFDLGVBQUEsT0FBQU4sU0FBQTtJQUFBLE9BQUFHLE1BQUEsQ0FBQUksSUFBQSxPQUMxQkYsTUFBTTtFQUNkO0VBQUNHLFlBQUEsQ0FBQVIsU0FBQTtJQUFBUyxHQUFBO0lBQUFDLEtBQUEsV0FBQUMsYUFFbUJDLFVBQWtCLEVBQWdCO01BQ3BELE9BQUFDLElBQUEsQ0FBQUMsZUFBQSxDQUFBZCxTQUFBLENBQUFlLFNBQUEsd0JBQUFSLElBQUEsT0FBeUI7UUFDdkJTLFVBQVUsRUFBRSw2Q0FBNkM7UUFDekRDLFNBQVMsRUFBRUw7TUFDYixDQUFDO0lBQ0g7RUFBQztFQUFBLE9BQUFaLFNBQUE7QUFBQSxFQVY0QkQsTUFBTSJ9